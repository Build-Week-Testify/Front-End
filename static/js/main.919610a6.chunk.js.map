{"version":3,"sources":["img/Beachprofile.jpg","img/Greg_cameron.png","img/Jonathan_Ferrer.png","img/Jordan_Miller.png","img/Raajn_Patel.png","components/Header.js","components/landing/Landing.js","components/landing/About.js","utils/axiosWithAuth.js","components/SignUp.js","components/AccessDenied.js","actions/testActions.js","components/teacher/TeacherLanding.js","components/student/StudentGrades.js","components/student/AssignedTests.js","components/student/CompletedTests.js","components/student/StudentDashboard.js","components/Login.js","actions/teacherActions.js","components/test/QuesitonTypeBuilder.js","components/test/CreateQuestion.js","actions/questionActions.js","components/test/EditQuestion.js","components/test/CreateTest.js","components/teacher/EditTest.js","components/teacher/TestViewer.js","components/teacher/TestBank.js","components/teacher/ClassViewer.js","components/teacher/ClassesDashboard.js","components/student/TakeTest.js","components/teacher/StudentRoster.js","App.js","reducers/teacherReducer.js","reducers/testReducer.js","reducers/studentReducer.js","reducers/questtionReducer.js","serviceWorker.js","index.js"],"names":["module","exports","Header","currentUser","loggedIn","populateUser","HDiv","setLoggedIn","styled","div","StyledLink","NavLink","Link","className","to","name","exact","id","Landing","About","src","Jonathan_Ferrer","alt","Ariana_Shackelford","Jordan_Miller","Greg_cameron","Raajn_Patel","axiosWithAuth","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","SignUp","withFormik","mapPropsToValues","username","email","password","isTeacher","teacherID","teacherName","validationSchema","Yup","shape","required","min","handleSubmit","values","setStatus","students","testBank","classes","classSubject","gpa","assignedTests","completedTests","post","then","res","data","catch","err","alert","response","error","console","log","initial","history","touched","errors","status","useState","teachers","setTeachers","searchTerm","setSearchTerm","searchResults","setSearchResults","useEffect","newUser","push","get","slice","handleChange","event","target","value","results","filter","char","toLowerCase","includes","type","placeholder","checked","onChange","component","map","teach","forEach","AccessDenied","props","setTitle","title","payload","setCreator","creator","addQuestion","question","removeQuestion","setTestTaker","testTaker","createNewTest","testObj","dispatch","save","testId","put","getTest","clearFields","connect","state","onClick","StudentGrades","dummyTests","score","assigned","completed","reduce","accumulator","currentValue","length","toFixed","AssignedTests","currentPage","setCurrentPage","test","index","assignedDate","dueDate","CompletedTests","scorePercentage","completedDate","StudentDashboard","classData","setClassData","setReducedStudents","studentsClasses","klass","testsAssigned","cTest","setUser","userObj","credentials","setCredentials","e","onSubmit","preventDefault","setItem","user","QuesitonTypeBuilder","options","option","key","htmlFor","cols","rows","initialState","isEditing","Date","now","correct","answer","questions","testReducer","setType","qType","firstSubmit","newQuestion","setNewQuestion","choice","setChoice","callSave","setCallSave","handleChanges","setTrueFalseChoices","action","onChangeCapture","defaultValue","addChoice","op","item","EditQuestion","teacherReducer","editing","editingId","setClearingFields","saveTest","submitTest","setEditing","setEditingId","Button","button","TomatoButton","EditButton","teacherObj","testIds","deleteTest","delete","saveTeacher","teacherId","today","dateAssigned","getMonth","getDate","getFullYear","assigning","setAssigning","idToGet","match","params","subj","setSubj","submitTrue","setSubmitTrue","setTests","newAssignment","setNewAssignment","subject","obj","selectedClass","find","addAssignmentToClass","TestBank","studentIds","tests","setStudents","currentClass","stId","student","TakeTest","loadedTest","setLoadedTest","testid","currentQuestion","setCurrentQuestion","answerList","gradedAnswers","isChecked","setIsChecked","checkedCheck","Array","isArray","opt","validateFunc","undefined","quest","bool","completedTest","answersList","buttonIncFunc","buttonDecFunc","assginStudentToClass","openDropDown","setOpenDropDown","i","lenght","href","stu","addStudentToClass","App","setCurrentUser","path","render","TestViewer","StudentRoster","ClassesDashboard","isSaving","firstName","lastName","teacher","testsCompleted","testsPending","Boolean","window","location","hostname","store","createStore","combineReducers","classPath","studentReducer","questionReducer","applyMiddleware","thunk","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.919610a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Beachprofile.da8d632b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Greg_cameron.2493763e.png\";","module.exports = __webpack_public_path__ + \"static/media/Jonathan_Ferrer.f79fd79e.png\";","module.exports = __webpack_public_path__ + \"static/media/Jordan_Miller.43edd390.png\";","module.exports = __webpack_public_path__ + \"static/media/Raajn_Patel.edb686a0.png\";","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default function Header({ currentUser, populateUser, loggedIn, setLoggedIn }) {\r\n  const HDiv = styled.div`\r\n    text-decoration: none;\r\n  `;\r\n  const StyledNavLink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    :visited {\r\n      color: black;\r\n    }\r\n    :hover {\r\n      background-color: grey;\r\n    }\r\n  `;\r\n  const StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: black;\r\n    :visited {\r\n      color: black;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <>\r\n    <HDiv className='headerDiv'>\r\n      <div className='semicircle'>\r\n      <StyledLink to='/'>\r\n        <h1 className='initial'>Testify</h1>\r\n      </StyledLink>\r\n      </div>\r\n      \r\n      {(() => {\r\n        if (loggedIn === true) {\r\n          return (\r\n            <>\r\n            <h1>Welcome {currentUser.name}!</h1>\r\n            <nav className='loggedIn'>\r\n              <NavLink exact to='/'>\r\n                Home{' '}\r\n              </NavLink>\r\n\r\n              <NavLink id='login' to='/Teacher'>Teacher </NavLink>\r\n              <NavLink id='login' to='/Student'>Student </NavLink>\r\n            </nav>\r\n            \r\n            \r\n            </>\r\n          );\r\n        } else if (loggedIn === false) {\r\n          return (\r\n            <nav className='notLoggedIn'>\r\n              <NavLink exact to='/'>\r\n                Home{' '}\r\n              </NavLink>\r\n              <NavLink id='login' to='/About'>About </NavLink>\r\n              <NavLink id='login' to='/Login'>Login </NavLink>\r\n            </nav>\r\n          );\r\n        }\r\n      })()}\r\n\r\n    </HDiv>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <section className=\"about\">\r\n                    <h3>What We Do</h3>\r\n                    <p>Just relax and let it flow. That easy. Remember how free clouds are. They just lay around in the sky all day long. Let the paint work. Little trees and bushes grow however makes them happy. If I paint something, I don't want to have to explain what it is. Everyone is going to see things differently - and that's the way it should be.\r\n                    </p>\r\n                </section>\r\n                <section className=\"users\">\r\n                    <div className=\"user\">\r\n                        <h4>Teachers</h4>\r\n                        <p>Just relax and let it flow. That easy. Remember how free clouds are. They just lay around in the sky all day long. Let the paint work. Little trees and bushes grow however makes them happy. If I paint something, I don't want to have to explain what it is. Everyone is going to see things differently - and that's the way it should be.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"user\">\r\n                        <h4>Students</h4>\r\n                        <p>Just relax and let it flow. That easy. Remember how free clouds are. They just lay around in the sky all day long. Let the paint work. Little trees and bushes grow however makes them happy. If I paint something, I don't want to have to explain what it is. Everyone is going to see things differently - and that's the way it should be.\r\n                        </p>\r\n                    </div>\r\n                </section>\r\n                <h2>Types of tests</h2>\r\n                <section className=\"tests\">     \r\n                    <div className=\"test\">\r\n                        <h5>1</h5>\r\n                        <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.</p>\r\n                    </div>\r\n                    <div className=\"test\">\r\n                        <h5>2</h5>\r\n                        <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.</p>\r\n                    </div>\r\n                    <div className=\"test\">\r\n                        <h5>3</h5>\r\n                        <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <footer>\r\n                {/* <div class='icons'>\r\n                    <img src=\"#\" alt=\"#\">  \r\n                    <img src=\"#\" alt=\"#\">\r\n                </div> */}\r\n                <p>Testify copyright 2019</p>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Ariana_Shackelford from '../../img/Beachprofile.jpg'\r\nimport Greg_cameron from '../../img/Greg_cameron.png'\r\nimport Jonathan_Ferrer from '../../img/Jonathan_Ferrer.png'\r\nimport Jordan_Miller from '../../img/Jordan_Miller.png'\r\nimport Raajn_Patel from '../../img/Raajn_Patel.png'\r\n\r\nexport default function About() {\r\n    return (\r\n        <>\r\n        <section className=\"top\">\r\n            <div className=\"developer\">\r\n                <h3>Project Manager</h3>\r\n                <img src={Jonathan_Ferrer} alt=\"Jonothan_Ferrer\"/>\r\n                <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.\r\n                    </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"middle\">\r\n            <div className=\"developer\">\r\n                <h3>UI</h3>\r\n                <img src={Ariana_Shackelford} alt=\"Ariana_Shackelford\"/>\r\n                <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.\r\n                    </p>\r\n            </div>\r\n            <div className=\"developer\">\r\n                <h3>Front End</h3>\r\n                <img src={Jordan_Miller} alt=\"Jordan_Miller\"/>\r\n                <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.\r\n                    </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"middle\">\r\n            <div className=\"developer\">\r\n                <h3>Front End</h3>\r\n                <img src={Greg_cameron} alt=\"Greg_Cameron\"/>\r\n                <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.\r\n                    </p>\r\n            </div>\r\n            <div className=\"developer\">\r\n                <h3>Back End</h3>\r\n                <img src={Raajn_Patel} alt=\"Raajn_Patel\"/>\r\n                <p>I'm sort of a softy, I couldn't shoot Bambi except with a camera. Steve wants reflections, so let's give him reflections. In this world, everything can be happy.\r\n                    </p>\r\n            </div>\r\n        </section>\r\n        \r\n        <footer>\r\n            {/* <div class='icons'>\r\n                <img src=\"#\" alt=\"#\">  \r\n                <img src=\"#\" alt=\"#\">\r\n            </div> */}\r\n            <p>Testify copyright 2019</p>\r\n        </footer>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const axiosWithAuth = () => {\r\n  const token = localStorage.getItem('token');\r\n  return axios.create({\r\n    baseURL: 'http://localhost:3333',\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport '../test.css';\r\n\r\n\r\nconst SignUpForm = ({ setLoggedIn, populateUser, history, values, touched, errors, status }) => {\r\n  const [teachers, setTeachers] = useState([]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  let initial;\r\n\r\n  useEffect(()=>{\r\n    //This is to prevent you from being redirected as soon as you visit the page.\r\n    initial = true;\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // redirect to teacher or student dashboard here\r\n    if (!initial){\r\n      console.log(status);\r\n      if (status.newUser.isTeacher){\r\n        populateUser(status.newUser);\r\n        setLoggedIn(true);\r\n        history.push('/Teacher');\r\n      }\r\n      else{\r\n        populateUser(status.newUser);\r\n        setLoggedIn(true);\r\n        history.push('/Student');\r\n      }\r\n    }\r\n    initial = false;\r\n  }, [status]);\r\n  \r\n  useEffect(() => {\r\n    //axios get reduced teachers array here, then search by name to add to student object\r\n    axiosWithAuth()\r\n      .get('/teachers')\r\n      .then(response => {\r\n        console.log(response);\r\n        setTeachers(response.data.slice(0));\r\n      })\r\n      .catch(error => {\r\n        console.error('Server Error: ', error);\r\n      });\r\n  }, []);\r\n\r\n  //Teacher search form code. Listens for text inputted into search box, then filters teacher array for names that match.\r\n  //Names that match get displayed in the 'please choose one' dropdown, and the chosen one's id is added to the student object\r\n  const handleChange = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchTerm !== '') {\r\n      const results = teachers.filter(char =>\r\n        char.name.toLowerCase().includes(searchTerm)\r\n      );\r\n      setSearchResults(results);\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  }, [teachers, searchTerm]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='initial'>Sign Up</h1>\r\n      <Form className='signUpForm'>\r\n        <Field\r\n          className='field'\r\n          type='text'\r\n          name='name'\r\n          placeholder='name'\r\n        />\r\n        {touched.name && errors.name && (<p className='error'>{errors.name}</p>)}\r\n        <br />\r\n        <Field\r\n          className='field'\r\n          type='text'\r\n          name='username'\r\n          placeholder='username'\r\n        />\r\n        {touched.username && errors.username && (<p className='error'>{errors.username}</p>)}\r\n        <br />\r\n\r\n        <Field\r\n          className='field'\r\n          type='email'\r\n          name='email'\r\n          placeholder='email'\r\n        />\r\n        {touched.email && errors.email && (<p className='error'>{errors.email}</p>)}\r\n        <br />\r\n\r\n        <Field\r\n          className='field'\r\n          type='password'\r\n          name='password'\r\n          placeholder='password'\r\n        />\r\n        {touched.password && errors.password && (<p className='error'>{errors.password}</p>)}\r\n        <br />\r\n\r\n        <label className='field'>\r\n          <span className='checkmark' />\r\n          Are you a teacher?\r\n          <Field type='checkbox' name='isTeacher' checked={values.isTeacher} />\r\n        </label>\r\n        <br />\r\n\r\n        {(() => {\r\n          if (!values.isTeacher) {\r\n            return (\r\n              <label>\r\n                Who is your teacher? <br />\r\n                <Field\r\n                  className='field'\r\n                  type='text'\r\n                  value={searchTerm}\r\n                  placeholder='Teacher Name'\r\n                  onChange={handleChange}\r\n                />\r\n                <br />\r\n                <Field component='select' name='teacherID'>\r\n                  <option>Please Choose an Option</option>\r\n                  {searchResults.map(teach => {\r\n                    return (\r\n                      <option\r\n                        value={teach.id}\r\n                        onChange={() => {\r\n                          console.log(values);\r\n                          values.teacherName = teach.name;\r\n                        }}\r\n                      >\r\n                        {teach.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Field>\r\n                {touched.teacherID && errors.teacherID && (<p className='error'>Please select a teacher.</p>)}\r\n                <br /> <br />\r\n              </label>\r\n            );\r\n          }\r\n        })()}\r\n\r\n        {(()=>{\r\n          if (values.isTeacher){\r\n            values.teacherID = 0\r\n          }\r\n        })()}\r\n\r\n        {values.teacherID !== null &&\r\n        teachers.forEach((teach)=>{\r\n          if (teach.id == values.teacherID){\r\n              values.teacherName= teach.name; //this sets the teacherName based off of the values.teacherID which is set in the dropdown.\r\n          }; //I couldn't easily figure out how to make selecting the dropdown update two values or run an inline function, so I did it here.\r\n        })}\r\n\r\n        <button type='submit'>Submit!</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SignUp = withFormik({\r\n  mapPropsToValues({\r\n    username,\r\n    name,\r\n    email,\r\n    password,\r\n    isTeacher,\r\n    teacherID,\r\n    teacherName,\r\n  }) {\r\n    return {\r\n      username: username || '',\r\n      name: name || '',\r\n      email: email || '',\r\n      password: password || '',\r\n      isTeacher: isTeacher || false,\r\n      teacherID: teacherID || null,\r\n      teacherName: teacherName || 'null',\r\n    };\r\n  },\r\n\r\n  validationSchema: Yup.object().shape({\r\n    name: Yup.string().required('Please enter your name'),\r\n    username: Yup.string().required('Please enter your username'),\r\n    email: Yup.string().required('Please enter your email'),\r\n    password: Yup.string().min(6, 'Password must be at least six characters long.').required('Please enter a password'),\r\n    teacherID: Yup.number().required('Please pick an option')\r\n  }),\r\n\r\n  handleSubmit( values, { setStatus }) {\r\n    //Appending vars to form object that do not come from input form here before posting to the server\r\n    values.students = [];\r\n    values.testBank = [];\r\n    values.classes = [];\r\n    values.classSubject = '';\r\n    values.gpa = 0;\r\n    values.assignedTests = [];\r\n    values.completedTests = [];\r\n\r\n    axiosWithAuth()\r\n      // values is our object with all our data on it.\r\n      .post('/api/signUp', values)\r\n      .then(res => {\r\n        setStatus(res.data);\r\n      })\r\n      .catch(err => {\r\n        alert(err.response.data.error);\r\n        console.log(err.response);\r\n      });\r\n  }\r\n})(SignUpForm);\r\n\r\nexport default SignUp;\r\n\r\n","import React from 'react';\r\n\r\nexport default function AccessDenied(props) {\r\n  console.log('AccessDenied.js props: ', props);\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        if (props.loggedIn) {\r\n          if (props.currentUser.isTeacher) {\r\n            return (\r\n              <div>\r\n                <h1>Access Denied.</h1>\r\n                <h2>This page is not accessible by Teachers.</h2>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div>\r\n                <h1>Access Denied.</h1>\r\n                <h2>This page is not accessible by Students.</h2>\r\n              </div>\r\n            );\r\n          }\r\n        } else {\r\n          return (\r\n            <div>\r\n              <h1>Access Denied.</h1>\r\n              <h2>You must be logged in to view this page.</h2>\r\n            </div>\r\n          );\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n}\r\n","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\n\r\n/* 3 things of an action suite:\r\n1. action creators: a function that creates actions (returns action OBJECTS out of it)\r\n2. action types: variables that contain the type strings to save us from spelling erros\r\n3. actions: objects that describe to the reducer what event has occured and how it should update the state. (action is in the reducer switch satement)\r\n\r\nexport const someFunc = () => {\r\n  return {type: 'SOME_ACTION', payload: }\r\n}\r\n\r\n*/\r\n// action type:\r\nexport const SET_TITLE = 'SET_TITLE';\r\n// action creator - you will import this action into the component in which you wan to use AND the reducer it's action is in the return\r\nexport const setTitle = title => {\r\n  return { type: SET_TITLE, payload: title };\r\n};\r\n\r\nexport const SET_CREATOR = 'SET_CREATOR';\r\nexport const setCreator = creator => {\r\n  return { type: SET_CREATOR, payload: creator };\r\n};\r\n\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const addQuestion = question => {\r\n  return { type: ADD_QUESTION, payload: question };\r\n};\r\n\r\nexport const REMOVE_QUESTION = 'REMOVE_QUESTION';\r\nexport const removeQuestion = question => {\r\n  console.log('testActions removeQuestoin id', question);\r\n  return { type: REMOVE_QUESTION, payload: question };\r\n};\r\n\r\nexport const SET_TEST_TAKER = 'SET_TEST_TAKER';\r\nexport const setTestTaker = testTaker => {\r\n  return { type: SET_TEST_TAKER, payload: testTaker };\r\n};\r\n/* ===== CREATE NEW TEST ========== */\r\nexport const CREATE_TEST_FAILED = 'CREATE_TEST_FAILED';\r\nexport const CREATING_NEW_TEST = 'CREATING_NEW_TEST';\r\nexport const NEW_TEST_CREATED = 'NEW_TEST_CREATED';\r\n/* action creator */\r\nexport const createNewTest = testObj => dispatch => {\r\n  dispatch({ type: CREATING_NEW_TEST });\r\n  axiosWithAuth()\r\n    .post('/tests', testObj)\r\n    .then(res => {\r\n      dispatch({ type: NEW_TEST_CREATED, payload: res.data });\r\n    })\r\n    .catch(err => dispatch({ type: CREATE_TEST_FAILED, payload: err }));\r\n};\r\n\r\n/* ======= SAVING TEST ========   */\r\nexport const SAVING = 'SAVING';\r\nexport const SAVE_SUCCESS = 'SAVE_SUCCESS';\r\nexport const SAVE_FAIL = 'SAVE_FAIL';\r\nexport const save = (testId, testObj) => dispatch => {\r\n  dispatch({ type: SAVING });\r\n  axiosWithAuth()\r\n    .put(`/tests/${testId}`, testObj)\r\n    .then(res => {\r\n      dispatch({ type: SAVE_SUCCESS, payload: res.data });\r\n      console.log('testActions.js save res:', res);\r\n    })\r\n    .catch(err => dispatch({ type: SAVE_FAIL, payload: err }));\r\n};\r\n/* ====== GET TEST ===========  */\r\nexport const GETTING_TEST = 'GETTING_TEST';\r\nexport const TEST_RECEIVED = 'TEST_RECEIVED';\r\nexport const TEST_NOT_RECEIVED = 'TEST_NOT_RECEIVED';\r\nexport const getTest = id => dispatch => {\r\n  console.log('testActions.js getTest called');\r\n  dispatch({ type: GETTING_TEST });\r\n  axiosWithAuth()\r\n    .get(`/testById/${id}`)\r\n    .then(res => {\r\n      dispatch({ type: TEST_RECEIVED, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: TEST_NOT_RECEIVED, payload: err });\r\n    });\r\n};\r\n\r\n/* ==== CLEAR FIELDS ======== */\r\n\r\nexport const CLEAR_FIELDS = 'CLEAR_FIELDS';\r\n\r\nexport const clearFields = () => dispatch => {\r\n  dispatch({ type: CLEAR_FIELDS });\r\n};\r\n\r\n/* ======== DELETE TEST ================ */\r\nexport const DELETEING_TEST = 'DELETEING_TEST';\r\nexport const TEST_DELETED = 'TEST_DELETED';\r\nexport const CONFIRM_DELETE_TEST = 'CONFIRM_DELETE_TEST';\r\nexport const deleteTest = id => dispatch => {\r\n  dispatch({ type: CONFIRM_DELETE_TEST });\r\n  dispatch({ type: DELETEING_TEST, payload: id });\r\n  axiosWithAuth()\r\n    .delete(`/tests/${id}`)\r\n    .then(res => {\r\n      alert('Your Test Has Been Deleted!');\r\n      console.log(res.data);\r\n      dispatch({ type: CLEAR_FIELDS });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport AccessDenied from '../AccessDenied.js';\r\nimport { connect } from 'react-redux';\r\nimport { clearFields } from '../../actions';\r\n\r\nconst TeacherLanding = props => {\r\n  // const { teacherUser } = props;\r\n  // const { name, username, email } = teacherUser;\r\n  const [navigated, setNavigated] = useState(false);\r\n\r\n  console.log('TeacherLanding.js props: ', props);\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        if (props.loggedIn) {\r\n          if (props.currentUser.isTeacher) {\r\n            return (\r\n              <div>\r\n                <div className='teacher-tabs'>\r\n                  <NavLink\r\n                    onClick={props.clearFields}\r\n                    to='/Teacher/create-test'\r\n                  >\r\n                    Create New Test\r\n                  </NavLink>\r\n                  <NavLink to='/Teacher/test-bank'>My Test Bank</NavLink>\r\n                  <NavLink to='/Teacher/student-roster'>Student Roster</NavLink>\r\n                  <NavLink to='/Teacher/classes-dashboard'>My Classes</NavLink>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return <AccessDenied {...props} />;\r\n          }\r\n        } else {\r\n          return <AccessDenied {...props} />;\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { clearFields }\r\n)(TeacherLanding);\r\n","import React from 'react'\r\n\r\nexport default function StudentGrades() {\r\n\r\n    let dummyTests = [{id: 0, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 1, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 2, score: 40, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 3, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 4, score: 20, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 5, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 6, score: 0, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 7, score: 90, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 8, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 9, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },\r\n    {id: 10, score: 100, assigned: '10/22/2019', completed: '10/25/2019' },];\r\n\r\n    let totalScore = dummyTests.reduce(function (accumulator, currentValue) {\r\n        return accumulator + currentValue.score;\r\n    }, 0);\r\n    \r\n    let gpa = totalScore/dummyTests.length;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='initial'>Student Grades</h1>\r\n            <p>You have an average score of {gpa.toFixed()}% on the {dummyTests.length} tests you have taken. Nice!</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link} from 'react-router-dom';\r\n\r\nexport default function AssignedTests(props) {\r\nconst [currentPage, setCurrentPage] = useState(0)\r\n    const buttonIncFunc = () => {\r\n        if (currentPage+1 < (props.currentUser.assignedTests.length/5)){\r\n            setCurrentPage(currentPage+1);\r\n        }\r\n      };\r\n      const buttonDecFunc = () => {\r\n        if (currentPage > 0){\r\n            setCurrentPage(currentPage-1);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className='pendingTestsDiv'>\r\n        <h1 className='initial'>Assigned Tests</h1>\r\n       \r\n        {/* Render pagination buttons only if student has more than 5 assigned tests */}\r\n        {props.currentUser.assignedTests.length > 5 &&\r\n            <><button onClick={buttonDecFunc}>Previous</button><button onClick={buttonIncFunc}>Next</button></>\r\n        }\r\n       \r\n        {props.currentUser &&\r\n        props.currentUser.assignedTests.map((test, index)=>{\r\n            if ((index >= currentPage*5) && (index < ((currentPage+1)*5))){\r\n                console.log('index: ', index);\r\n                console.log('test: ', test);\r\n                return <p>{test.title} id: {test.id}, Assigned: {test.assignedDate}, Due: {test.dueDate} {<Link to={`/Student/TakeTest/${test.id}`}>Take Test</Link>}</p>\r\n            }\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function CompletedTests(props) {\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    console.log('COMPLETED TESTS: ', props.currentUser.completedTests);\r\n\r\n    const buttonIncFunc = () => {\r\n        if (currentPage+1 < (props.currentUser.completedTests.length/5)){\r\n            setCurrentPage(currentPage+1);\r\n        }\r\n      };\r\n      const buttonDecFunc = () => {\r\n        if (currentPage > 0){\r\n            setCurrentPage(currentPage-1);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='initial'>Completed Tests</h1>\r\n            \r\n            {/* Render pagination buttons only if student has more than 5 completed tests */}\r\n            {props.currentUser.completedTests.length > 5 &&\r\n            <><button onClick={buttonDecFunc}>Previous</button><button onClick={buttonIncFunc}>Next</button></>\r\n            }\r\n            {props.currentUser.completedTests &&\r\n            props.currentUser.completedTests.map((test, index)=>{\r\n                if ((index >= currentPage*5) && (index < ((currentPage+1)*5))){\r\n                    return <p>{test.title} id: {test.testId}, score: {test.scorePercentage}%, Assigned: {test.assignedDate}, Completed: {test.completedDate}</p>\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect }from 'react'\r\nimport AccessDenied from '../AccessDenied.js';\r\nimport StudentGrades from './StudentGrades.js';\r\nimport AssignedTests from './AssignedTests.js';\r\nimport CompletedTests from './CompletedTests.js';\r\n\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\n\r\nexport default function StudentDashboard(props) {\r\n\r\n    const [classData, setClassData] = useState();\r\n    const [reducedStudents, setReducedStudents] = useState(); //this is to show names of students assigned to class if I write that component\r\n    \r\n    useEffect(() => {\r\n        axiosWithAuth()\r\n            .get(`/getAssignments/${props.currentUser.id}`)\r\n            .then(res => {\r\n            console.log('ClassData: ', res.data);\r\n            setClassData(res.data);\r\n            })\r\n            .catch(err => {\r\n            console.log('TestBank.js err', err);\r\n            });\r\n        }, []);\r\n\r\n    useEffect(() => {\r\n        //axios get reduced students array here, then search by name to add to student object\r\n        axiosWithAuth()\r\n            .get('/getStudents')\r\n            .then(response => {\r\n            console.log('Reduced Students array: ', response.data);\r\n            setReducedStudents(response.data.slice(0));\r\n            })\r\n            .catch(error => {\r\n            console.error('Server Error: ', error);\r\n            });\r\n        }, []);\r\n\r\n    console.log(classData);\r\n\r\n    let initial;\r\n\r\n    useEffect(()=>{\r\n        //This is to prevent studentClass useEffect from firing before classData is loaded from props...\r\n        initial = true;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //this takes all of the student's teacher's classes, then sets students classes to which of those the student is assigned to.\r\n        if (!initial){\r\n            console.log('UseEff CD: ', classData);\r\n            let studentsClasses = classData.filter( klass =>{\r\n                return klass.students.includes( props.currentUser.id );\r\n            });\r\n            console.log('stud classes: ', studentsClasses);\r\n\r\n            //assign all tests from all of student's classes to student's assignedTests.\r\n            //wipe current assigned tests and set here.\r\n            props.currentUser.assignedTests = [];\r\n            studentsClasses.forEach( klass =>{\r\n                klass.testsAssigned.forEach(test => {\r\n                    let abc = props.currentUser.completedTests.filter(cTest => cTest.testId == test.id);\r\n                    if(abc.length === 0){ //check if this test has already been completed by student before adding it to assignedTests array\r\n                        console.log('PUSHING TEST: ', test.id);\r\n                        props.currentUser.assignedTests.push(test);\r\n                    }\r\n                    else{\r\n                        console.log('successfully filtered this test out');\r\n                    }\r\n                });\r\n            });\r\n            console.log('Students assignedTests: ', props.currentUser.assignedTests);\r\n        }\r\n        initial = false;\r\n    }, [classData])\r\n\r\n    return (\r\n        <div>\r\n        <h2 className='initial'>Student Dashboard</h2>\r\n        <h3 className='initial'>Make component for showing what classes the student is in and their grade for that class <br/> (average of student scores to tests assigned to class)</h3>\r\n        {(() => {\r\n            if(props.loggedIn){\r\n                if (props.currentUser.isTeacher){\r\n                    return <AccessDenied {...props}/>\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                        <StudentGrades {...props}/>\r\n                        <AssignedTests {...props} currentUser={props.currentUser} />\r\n                        <CompletedTests {...props} currentUser={props.currentUser} />\r\n                        </div>)\r\n                }\r\n            }\r\n            else{\r\n                return <AccessDenied {...props}/>\r\n            }\r\n        })()} \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport { connect } from 'react-redux';\r\nimport { setUser } from '../actions';\r\n\r\nconst Login = props => {\r\n  /* ==== Will use this for login when server set up ===== */\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  console.log('Login.js credentials: ', credentials);\r\n  const handleChange = e => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const login = e => {\r\n    e.preventDefault();\r\n\r\n    axiosWithAuth()\r\n      .post('/api/login', credentials)\r\n      .then(res => {\r\n        localStorage.setItem('token', res.data.payload);\r\n        if (res.data.user.isTeacher) {\r\n          props.history.push('/Teacher');\r\n          props.populateUser(res.data.user);\r\n          props.setUser(res.data.user);\r\n        } else {\r\n          props.history.push('/Student');\r\n          props.populateUser(res.data.user);\r\n          props.setUser(res.data.user);\r\n        }\r\n\r\n        props.setLoggedIn(true);\r\n        console.log('Login.js aWA .post res', res);\r\n      })\r\n      .catch(err => {\r\n        alert(err.response.data.error);\r\n        console.log('Login.js post err: ', err);\r\n      });\r\n  };\r\n  /* ==== Will use this for login when server set up ===== */\r\n  return (\r\n    <div className='login-container initial'>\r\n      <h1>Login</h1>\r\n      <form onSubmit={login}>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          placeholder='Username'\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Password'\r\n          onChange={handleChange}\r\n        />\r\n        <button type='submit'>Log in</button>\r\n      </form>\r\n      <span>New here?</span>\r\n      <br />\r\n      <Link to='/SignUp'>Sign up for an account</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setUser }\r\n)(Login);\r\n","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\n\r\nexport const SET_USER = 'SET_USER';\r\n\r\nexport const setUser = userObj => dispatch => {\r\n  console.log('teacherActions.js setUser called: ');\r\n  dispatch({ type: SET_USER, payload: userObj });\r\n};\r\n\r\nexport const ASSIGN_STUDENT_TO_CLASS = 'ASSIGN_STUDENT_TO_CLASS';\r\nexport const assginStudentToClass = (id, subject) => dispatch => {\r\n  console.log('ASSIGN STUDENT');\r\n  dispatch({ type: ASSIGN_STUDENT_TO_CLASS, payload: [id, subject] });\r\n};\r\n\r\nexport const SAVING_TEACHER = 'SAVING_TEACHER';\r\nexport const SAVE_TEACHER_SUCCESS = 'SAVE_TEACHER_SUCCESS';\r\nexport const SAVE_TEACHER_FAIL = 'SAVE_TEACHER_FAIL';\r\nexport const saveTeacher = (teacherId, teacherObj) => dispatch => {\r\n  dispatch({ type: SAVING_TEACHER });\r\n  axiosWithAuth()\r\n    .put(`/updateClasses/${teacherId}`, teacherObj)\r\n    .then(res => {\r\n      dispatch({ type: SAVE_TEACHER_SUCCESS, payload: res.data });\r\n      console.log('testActions.js SAVE_TEACHER res:', res);\r\n    })\r\n    .catch(err => dispatch({ type: SAVE_TEACHER_FAIL, payload: err }));\r\n};\r\n","import React from 'react';\r\n\r\n/* QuestionTypeBuilder  looks at INCOMING TEST INFO (eventually from server), analyzes the question data\r\n  it will buidld the question based on the type of data. \r\n*/\r\nexport default function QuesitonTypeBuilder({ question }) {\r\n  if (question.type === 'multiple-choice') {\r\n    return (\r\n      <ul className='question-multiple-choice'>\r\n        {question.options.map(option => (\r\n          <li key={option} className='question-option'>\r\n            <input name='option' type='radio' />\r\n            <label htmlFor='option'>{option}</label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else if (question.type === 'true-false') {\r\n    return (\r\n      <ul className='question-true-false'>\r\n        {question.options.map(option => (\r\n          <li key={option} className='question-option'>\r\n            <label htmlFor='option'>{option}</label>\r\n            <input name='option' type='radio' />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <div className='question-options-container'>\r\n      <textarea name='short-anwer' id='' cols='30' rows='10' />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setType, addQuestion, save, getTest, submitTest } from '../../actions';\r\n\r\nconst initialState = {\r\n  isEditing: false,\r\n  id: Date.now(),\r\n  correct: false,\r\n  question: '',\r\n  type: 'Choose Value',\r\n  options: [],\r\n  answer: ''\r\n};\r\n/* Creates new questions from USER input. Does not come from reducer state or the server */\r\n\r\nfunction CreateQuestion(props) {\r\n  /* console.log('CreateQuestions.js props', props); */\r\n  const { addQuestion, save, testObj, getTest, testId } = props;\r\n  const [firstSubmit, setFirstSubmit] = useState(true);\r\n  const [newQuestion, setNewQuestion] = useState(initialState);\r\n  const [choice, setChoice] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [callSave, setCallSave] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.save(testId, testObj);\r\n  }, [callSave]);\r\n  console.log('CreateQuestion.js testObj', testObj, firstSubmit);\r\n\r\n  /* console.log('CreateQuestion.js choice:', choice);\r\n  \r\n \r\n  console.log('CreateQuestion.js addChoice options', newQuestion.options); */\r\n  /* console.log('CreateQuestion.js newQuestion.answer ', newQuestion.options); */\r\n  /*  */\r\n  console.log('CreateQuestion.js testObj:', testObj);\r\n  console.log('CreateQuestion.js newQuestion: ', newQuestion);\r\n\r\n  /* useEffect(() => {\r\n    if (newQuestion.type === 'true-false') {\r\n      setNewQuestion({\r\n        ...newQuestion,\r\n        options: ['T', 'F']\r\n      });\r\n    }\r\n  }, [newQuestion]); */\r\n\r\n  const handleChanges = e => {\r\n    setNewQuestion({\r\n      ...newQuestion,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  const handleChoice = e => {\r\n    e.preventDefault();\r\n    setChoice(e.target.value);\r\n  };\r\n\r\n  const setMCAnswer = ans => {\r\n    setNewQuestion({\r\n      ...newQuestion,\r\n      answer: ans\r\n    });\r\n  };\r\n\r\n  const addChoice = e => {\r\n    e.preventDefault();\r\n    if (choice !== '')\r\n      setNewQuestion({\r\n        ...newQuestion,\r\n        options: [...newQuestion.options, choice]\r\n      });\r\n    setChoice('');\r\n  };\r\n\r\n  const setTrueFalseChoices = e => {\r\n    e.preventDefault();\r\n    if (newQuestion.type === 'true-false') {\r\n      setNewQuestion({\r\n        ...newQuestion,\r\n        options: ['T', 'F'],\r\n        answer: e.target.name\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeChoice = op => {\r\n    setNewQuestion({\r\n      ...newQuestion,\r\n      options: newQuestion.options.filter(item => item != op)\r\n    });\r\n  };\r\n\r\n  const submitQuestion = e => {\r\n    e.preventDefault();\r\n    if (newQuestion.type === 'multiple-choice') {\r\n      if (\r\n        newQuestion.question !== '' &&\r\n        newQuestion.options.length !== 0 &&\r\n        newQuestion.answer !== ''\r\n      ) {\r\n        addQuestion(newQuestion);\r\n        setCallSave(!callSave);\r\n        setNewQuestion({\r\n          isEditing: false,\r\n          id: '',\r\n          correct: false,\r\n          question: '',\r\n          type: '',\r\n          options: [],\r\n          answer: '',\r\n          value: ''\r\n        });\r\n      } else\r\n        alert(\r\n          \"Make sure all fields are filled in and you've selected the correct answer!\"\r\n        );\r\n    } else if (newQuestion.type === 'true-false') {\r\n      if (newQuestion.question !== '' && newQuestion.answer !== '') {\r\n        addQuestion(newQuestion);\r\n        setCallSave(!callSave);\r\n        /* if (newQuestion.type === 'true-false') {\r\n          setNewQuestion({\r\n            ...newQuestion,\r\n            options: ['T', 'F']\r\n          });\r\n        } */\r\n        setNewQuestion(initialState);\r\n      } else\r\n        alert(\r\n          \"Make sure all fields are filled in and you've selected the correct answer!\"\r\n        );\r\n    } else\r\n      alert(\r\n        \"Make sure all fields are filled in and you've selected the correct answer!\"\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className='create-question-container'>\r\n      <h3>Create Question</h3>\r\n      <form className='create-question-form' action=''>\r\n        <select name='type' onChangeCapture={handleChanges} type='text'>\r\n          <option defaultValue value='Choose type'>\r\n            Choose a question type:\r\n          </option>\r\n\r\n          <option value='multiple-choice'>multiple choice</option>\r\n          <option value='true-false'>true-false</option>\r\n          <option value='short-answer'>short answer</option>\r\n        </select>\r\n        {/* ======= MULTIPLE CHOICE ============= */}\r\n        {newQuestion.type === 'multiple-choice' && (\r\n          <>\r\n            <textarea\r\n              value={newQuestion.question}\r\n              name='question'\r\n              onChange={handleChanges}\r\n              type='text'\r\n              placeholder='Write your question'\r\n            />\r\n            <div>\r\n              <p>Add choices and select the correct answer</p>\r\n              <input\r\n                onChange={handleChoice}\r\n                value={choice}\r\n                name='options'\r\n                type='text'\r\n                placeholder='Add Choice'\r\n              />\r\n\r\n              <button onClick={e => addChoice(e, choice)}>Add Item</button>\r\n              <ul className='question-multiple-choice'>\r\n                {newQuestion.options.map(option => (\r\n                  <li key={option} className='question-option'>\r\n                    <input\r\n                      onClick={() => setMCAnswer(option)}\r\n                      name='option'\r\n                      type='radio'\r\n                    />\r\n                    <label htmlFor='option'>{option}</label>\r\n                    <span\r\n                      onClick={() => removeChoice(option)}\r\n                      className='remove-item'\r\n                    >\r\n                      {' '}\r\n                      X\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </>\r\n        )}\r\n        {/* ===== TRUE FALSE =========  */}\r\n        {newQuestion.type === 'true-false' && (\r\n          <div className='true-false-question'>\r\n            <textarea\r\n              value={newQuestion.question}\r\n              name='question'\r\n              onChange={handleChanges}\r\n              type='text'\r\n              placeholder='Write your question'\r\n            />\r\n            <div>\r\n              <p>Check the correct answer: </p>\r\n              <label htmlFor='true'>True</label>\r\n              <input\r\n                onClick={setTrueFalseChoices}\r\n                value='T'\r\n                name='T'\r\n                type='checkbox'\r\n              />\r\n              <label htmlFor='false'>False</label>\r\n              <input\r\n                onClick={setTrueFalseChoices}\r\n                name='F'\r\n                value='F'\r\n                type='checkbox'\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <button type='submit' onClick={submitQuestion}>\r\n          Submit Question\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    questions: state.testReducer.questions,\r\n    testId: state.testReducer.id,\r\n    testObj: state.testReducer.testObj\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setType, addQuestion, save, getTest }\r\n)(CreateQuestion);\r\n","// action type:\r\nexport const SET_TYPE = 'SET_TYPE';\r\n// action creator - you will import these actions into the component in which you wan to use AND the reducer.  action is in the return of the reducer.\r\nexport const setType = qType => {\r\n  return { type: SET_TYPE, payload: qType };\r\n};\r\n\r\nexport const ADD_OPTION = 'ADD_OPTION';\r\nexport const addOption = option => {\r\n  return { type: ADD_OPTION, payload: option };\r\n};\r\n\r\nexport const REMOVE_OPTION = 'REMOVE_OPTION';\r\nexport const removeOption = option => {\r\n  return { type: REMOVE_OPTION, payload: option };\r\n};\r\n\r\nexport const SET_ANSWER = 'SET_ANSWER';\r\nexport const setAnswer = answer => {\r\n  return { type: SET_ANSWER, payload: answer };\r\n};\r\n","import React from 'react';\r\n\r\nexport default function EditQuestion() {\r\n  return (\r\n    <div>\r\n      <h3>Edit Questoin</h3>\r\n      <form className='edit-test-form' action=''>\r\n        <textarea type='text' placeholder='Write your question' />\r\n        <select type='text'>\r\n          <option value='Choose a question type'>\r\n            Choose a question type:\r\n          </option>\r\n          <option value='multiple-choice'>multiple choice</option>\r\n          <option value='true-false'>true-false</option>\r\n          <option value='short-answer'>short answer</option>\r\n        </select>\r\n\r\n        <input type='text' placeholder='options' />\r\n        <button>+</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setTitle,\r\n  setTestTaker,\r\n  addQuestion,\r\n  removeQuestion,\r\n  setCreator,\r\n  save,\r\n  createNewTest,\r\n  getTest,\r\n  clearFields\r\n} from '../../actions';\r\nimport QuestionTypeBuilder from './QuesitonTypeBuilder';\r\nimport CreateQuestion from './CreateQuestion';\r\nimport EditQuestion from './EditQuestion';\r\n\r\nfunction CreateTest(props) {\r\n  console.log('CreateTest.js props:', props);\r\n  const {\r\n    title,\r\n    teacherName,\r\n    questions,\r\n    creator,\r\n    setTitle,\r\n    setCreator,\r\n    testObj,\r\n    save,\r\n    getTest,\r\n    createNewTest,\r\n    removeQuestion,\r\n    id\r\n  } = props;\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingId, setEditingId] = useState('');\r\n  const [clearingFiels, setClearingFields] = useState(false);\r\n  console.log('teacherName:', teacherName);\r\n  /* this use effect is only for development. there will be a blank test rendered and a new id created on server */\r\n\r\n  useEffect(() => {\r\n    setClearingFields(!clearFields);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.createNewTest(testObj);\r\n  }, [clearFields]);\r\n\r\n  const saveTest = e => {\r\n    e.preventDefault();\r\n    save(testObj.id, testObj);\r\n    props.history.push('/Teacher/test-bank');\r\n  };\r\n\r\n  const persistTitle = () => {\r\n    save(testObj.id, testObj);\r\n  };\r\n\r\n  return (\r\n    <div className='create-test-container'>\r\n      <div className='creator-forms-container'>\r\n        <h1 className='initial'>Create Test</h1>\r\n        <form className='title-teacher-form' action=''>\r\n          <input\r\n            onChange={e => {\r\n              setTitle(e.target.value);\r\n              persistTitle();\r\n            }}\r\n            type='text'\r\n            placeholder='Title'\r\n          />\r\n          <input\r\n            onChange={e => {\r\n              setCreator(e.target.value);\r\n            }}\r\n            value={creator}\r\n            type='text'\r\n            placeholder='Teacher'\r\n          />\r\n        </form>\r\n        {/* Creates new questions from USER input. Does not come from reducer state or the server */}\r\n        <CreateQuestion testObj={testObj} save={saveTest} />\r\n      </div>\r\n\r\n      {/* ======= PREVIEW ========= */}\r\n      <div className='test-preview'>\r\n        <h1>Test Preview</h1>\r\n        <p>Test id: {id}</p>\r\n        <div className='created-test'>\r\n          <button onClick={saveTest}>Submit Test</button>\r\n          <h2>Title: {title}</h2>\r\n          <h3>Teacher: {creator}</h3>\r\n          <div className='questions'>\r\n            {questions.map((question, index) => {\r\n              return (\r\n                <div key={question.id} className='preview-question'>\r\n                  <h3>Question: {index + 1}</h3>\r\n                  <p className='question'>{question.question}</p>\r\n                  {/* QuestionType looks at INCOMING TEST INFO (eventually from server), analyzes the question data  */}\r\n                  <QuestionTypeBuilder question={question} />\r\n                  {/* For editing */}\r\n                  <p>answer: {question.answer}</p>\r\n                  {editing && editingId === index && <EditQuestion />}\r\n                  {/*  <button\r\n                    onClick={() => (setEditing(!editing), setEditingId(index))}\r\n                  >\r\n                    Edit\r\n                  </button> */}\r\n                  <button onClick={() => removeQuestion(question.question)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isEditing: state.testReducer.isEditing,\r\n    creator: state.testReducer.creator,\r\n    title: state.testReducer.title,\r\n    testTaker: state.testReducer.testTaker,\r\n    questions: state.testReducer.questions,\r\n    id: state.testReducer.id,\r\n    testObj: state.testReducer,\r\n    teacherName: state.teacherReducer.name\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    setTitle,\r\n    setTestTaker,\r\n    addQuestion,\r\n    removeQuestion,\r\n    setCreator,\r\n    save,\r\n    getTest,\r\n    createNewTest,\r\n    clearFields\r\n  }\r\n)(CreateTest);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setTitle,\r\n  setTestTaker,\r\n  addQuestion,\r\n  removeQuestion,\r\n  setCreator,\r\n  save,\r\n  createNewTest,\r\n  getTest,\r\n  clearFields\r\n} from '../../actions';\r\nimport QuestionTypeBuilder from '../test/QuesitonTypeBuilder';\r\nimport CreateQuestion from '../test/CreateQuestion';\r\n\r\nfunction EditTest(props) {\r\n  console.log('EditTest.js props:', props);\r\n  const {\r\n    title,\r\n    questions,\r\n    creator,\r\n    setTitle,\r\n    setCreator,\r\n    testObj,\r\n    save,\r\n    getTest,\r\n    submitTest,\r\n    removeQuestion,\r\n    id\r\n  } = props;\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingId, setEditingId] = useState('');\r\n  /* this use effect is only for development. there will be a blank test rendered and a new id created on server */\r\n\r\n  const saveTest = e => {\r\n    e.preventDefault();\r\n    save(testObj.id, testObj);\r\n    props.history.push('/Teacher/test-bank');\r\n    props.clearFields();\r\n  };\r\n\r\n  return (\r\n    <div className='create-test-container'>\r\n      <div className='creator-forms-container'>\r\n        <h1 className='initial'>Create Test</h1>\r\n        <form className='title-teacher-form' action=''>\r\n          <input\r\n            onChange={e => {\r\n              setTitle(e.target.value);\r\n            }}\r\n            type='text'\r\n            placeholder='Title'\r\n          />\r\n          <input\r\n            onChange={e => {\r\n              setCreator(e.target.value);\r\n            }}\r\n            type='text'\r\n            placeholder='Teacher'\r\n          />\r\n        </form>\r\n        {/* Creates new questions from USER input. Does not come from reducer state or the server */}\r\n\r\n        <CreateQuestion testObj={testObj} save={saveTest} />\r\n      </div>\r\n\r\n      {/* ======= PREVIEW ========= */}\r\n      <div className='test-preview'>\r\n        <h3>Teacher: {creator}</h3>\r\n        <p>Test id: {id}</p>\r\n        <div className='created-test'>\r\n          <button onClick={saveTest}>Save Changes</button>\r\n          <h2>Title: {title}</h2>\r\n\r\n          <div className='questions'>\r\n            {questions.map((question, index) => {\r\n              return (\r\n                <div key={question.id} className='preview-question'>\r\n                  <h3>Question: {index + 1}</h3>\r\n                  <p className='question'>{question.question}</p>\r\n                  {/* QuestionType looks at INCOMING TEST INFO (eventually from server), analyzes the question data  */}\r\n                  <QuestionTypeBuilder question={question} />\r\n                  {/* For editing */}\r\n                  <p>answer: {question.answer}</p>\r\n                  {editing && editingId === index && <CreateQuestion />}\r\n                  <button\r\n                    onClick={() => (setEditing(!editing), setEditingId(index))}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => removeQuestion(question.question)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isEditing: state.testReducer.isEditing,\r\n    creator: state.testReducer.creator,\r\n    title: state.testReducer.title,\r\n    testTaker: state.testReducer.testTaker,\r\n    questions: state.testReducer.questions,\r\n    id: state.testReducer.id,\r\n    testObj: state.testReducer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    setTitle,\r\n    setTestTaker,\r\n    addQuestion,\r\n    removeQuestion,\r\n    setCreator,\r\n    save,\r\n    getTest,\r\n    createNewTest,\r\n    clearFields\r\n  }\r\n)(EditTest);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setTitle,\r\n  setCreator,\r\n  getTest,\r\n  addQuestion,\r\n  deleteTest,\r\n  saveTeacher\r\n} from '../../actions';\r\nimport CreateQuestion from '../test/CreateQuestion';\r\nimport EditTest from './EditTest';\r\nimport QuestionTypeBuilder from '../test/QuesitonTypeBuilder';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  color: palevioletred;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid palevioletred;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst TomatoButton = styled(Button)`\r\n  color: tomato;\r\n  border-color: tomato;\r\n`;\r\n\r\nconst EditButton = styled(Button)`\r\n  color: orange;\r\n  border-color: orange;\r\n`;\r\n\r\n/* ====== COMPONENT ============== */\r\n/* const assignment = {\r\n  id: id,\r\n  title: title,\r\n  assignedDate: dateAssigned,\r\n  dueDate: null\r\n}; */\r\n\r\nconst TestViewer = props => {\r\n  /* props */\r\n  const { testObj, classes, teacherObj, testIds } = props;\r\n  const { title, questions, creator, id } = props.testObj;\r\n\r\n  console.log(title, questions, creator, id);\r\n  console.log('TestView.js props', props);\r\n\r\n  /* local state and bools */\r\n  const today = new Date();\r\n  const dateAssigned = `${today.getMonth() +\r\n    1}-${today.getDate()}-${today.getFullYear()}`;\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [assigning, setAssigning] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const idToGet = props.match.params.id;\r\n  console.log('TestView.js idToGet: ', idToGet);\r\n  console.log('TestViewer dueDate', dueDate);\r\n  const [subj, setSubj] = useState('');\r\n  const [submitTrue, setSubmitTrue] = useState(false);\r\n  const [tests, setTests] = useState([]);\r\n  const [newAssignment, setNewAssignment] = useState({\r\n    id: id,\r\n    title: title,\r\n    assignedDate: dateAssigned,\r\n    dueDate: null\r\n  });\r\n  useEffect(() => {\r\n    axiosWithAuth()\r\n      .get(`/testsByCreator/${teacherObj.name}`)\r\n      .then(res => {\r\n        console.log('TestBank.js res', res);\r\n        setTests(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log('TestBank.js err', err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(subj);\r\n    console.log('isediting', editing);\r\n  }, [subj]);\r\n\r\n  useEffect(() => {\r\n    props.getTest(idToGet);\r\n  }, []);\r\n\r\n  const addAssignmentToClass = obj => {\r\n    const selectedClass = classes.find(klass => klass.id == subj);\r\n    const assignTo = selectedClass.testsAssigned.find(\r\n      test => test.id == obj.id\r\n    );\r\n    if (!assignTo) {\r\n      selectedClass.testsAssigned.push(obj);\r\n      console.log('SelectedClass, classes ', selectedClass, classes);\r\n      setSubmitTrue(false);\r\n      setSubj(null);\r\n      setAssigning(false);\r\n      props.saveTeacher(teacherObj.id, teacherObj);\r\n    } else alert('This test is already assigned to this class');\r\n  };\r\n\r\n  /* addAssignmentToClass(assignment, klass.subject); */\r\n\r\n  /* ======= RETURN ============= */\r\n  return (\r\n    <div>\r\n      <div className='test-viewer-options-btns'>\r\n        <div className='viewer-btn'>\r\n          <EditButton onClick={() => setEditing(!editing)}>\r\n            Edit Test\r\n          </EditButton>\r\n        </div>\r\n\r\n        <div className='assign-container'>\r\n          <div>\r\n            <Button onClick={() => setAssigning(!assigning)}>\r\n              Assign this test to a class\r\n            </Button>\r\n          </div>\r\n\r\n          {assigning && (\r\n            <div className='class-selector'>\r\n              <form>\r\n                <select\r\n                  onChange={e => {\r\n                    setSubj(e.target.value);\r\n                    console.log(subj);\r\n                  }}\r\n                >\r\n                  <option>Please Choose an Option</option>\r\n                  {classes.map(klass => {\r\n                    return <option value={klass.id}>{klass.subject}</option>;\r\n                  })}\r\n                </select>\r\n              </form>\r\n            </div>\r\n          )}\r\n          {subj && (\r\n            <div className='date-picker'>\r\n              <input\r\n                onChange={e => {\r\n                  setNewAssignment({\r\n                    ...newAssignment,\r\n                    dueDate: e.target.value\r\n                  });\r\n                  setSubmitTrue(true);\r\n                }}\r\n                type='date'\r\n              />\r\n            </div>\r\n          )}\r\n          {submitTrue && (\r\n            <Button onClick={() => addAssignmentToClass(newAssignment)}>\r\n              Assign Test\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='viewer-btn'>\r\n          <TomatoButton\r\n            id='delete-test-btn'\r\n            onClick={() => {\r\n              props.deleteTest(id);\r\n              props.history.push('/Teacher/test-bank');\r\n            }}\r\n          >\r\n            DELETE THIS TEST\r\n          </TomatoButton>\r\n        </div>\r\n      </div>\r\n      {editing && (\r\n        <div>\r\n          <EditTest history={props.history} />\r\n        </div>\r\n      )}\r\n      {!editing && (\r\n        <div>\r\n          <div className='test-preview'>\r\n            <h5>Test Preview</h5>\r\n            <h3>Teacher: {creator}</h3>\r\n            <p>Test id: {id}</p>\r\n            <div className='created-test'>\r\n              <h2>Title: {title}</h2>\r\n\r\n              <div className='questions'>\r\n                {questions.map((question, index) => {\r\n                  return (\r\n                    <div key={question.id} className='preview-question'>\r\n                      <h3>Question: {index + 1}</h3>\r\n                      <p className='question'>{question.question}</p>\r\n                      {/* QuestionType looks at INCOMING TEST INFO (eventually from server), analyzes the question data  */}\r\n                      <QuestionTypeBuilder question={question} />\r\n                      {/* For editing */}\r\n                      <p>answer: {question.answer}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log('TestViewr.js mStPs state', state);\r\n  return {\r\n    testObj: state.testReducer,\r\n    classes: state.teacherReducer.classes,\r\n    teacherObj: state.teacherReducer,\r\n    testIds: state.teacherReducer.testIds\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTest, setTitle, setCreator, addQuestion, deleteTest, saveTeacher }\r\n)(TestViewer);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport TestViewer from './TestViewer';\r\n\r\nexport default function TestBank(props) {\r\n  console.log('TestBank.js props: ', props);\r\n  const { assignedTests, classes, studentIds, name } = props.currentUser;\r\n  const [tests, setTests] = useState([]);\r\n  const [createdTests, setCreatedTests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axiosWithAuth()\r\n      .get(`/testsByCreator/${name}`)\r\n      .then(res => {\r\n        console.log('TestBank.js res', res);\r\n        setTests(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log('TestBank.js err', err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='initial'>{name}'s Tests</h1>\r\n      <div className='teacher-classes'>\r\n        {tests.map((test, index) => (\r\n          <Link key={index} to={`/Teacher/test-viewer/${test.id}`}>\r\n            {test.title}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\n\r\nconst ClassViewer = props => {\r\n  const { assignedTests, classes, studentIds } = props.teacherObj;\r\n  const [students, setStudents] = useState([]);\r\n\r\n  const classSubject = props.match.params.id;\r\n\r\n  const currentClass = classes.find(klass => {\r\n    if (klass.subject === classSubject) {\r\n      return klass.subject;\r\n    }\r\n  });\r\n  console.log(classSubject);\r\n  console.log('ClassViewer.js props:', props);\r\n  console.log('ClassViewer.js classes', classes);\r\n  console.log('ClassViewer.js currentClass', currentClass);\r\n  console.log('ClassViewer.js students', students);\r\n\r\n  useEffect(() => {\r\n    currentClass.students.forEach(stId => {\r\n      axiosWithAuth()\r\n        .get(`/userById/${stId}`)\r\n        .then(res => {\r\n          setStudents([...students, res.data]);\r\n          console.log(res.data);\r\n        })\r\n        .catch(err => console.log('error', err));\r\n    });\r\n  }, []);\r\n\r\n  /*   const results = tests.filter(test =>\r\n    test.creator.toLowerCase().includes(creator.toLocaleLowerCase())\r\n  ); */\r\n\r\n  return (\r\n    <div>\r\n      <h2>{currentClass.subject}</h2>\r\n      <div className='assignments'>\r\n        <h3>Tests Assigned:</h3>\r\n        <ul>\r\n          {currentClass.testsAssigned.map(test => (\r\n            <li key={test.title}>\r\n              <h3>{test.title}</h3>\r\n              <p>Remove student from this class</p>\r\n              <p>Date assigned: {test.assignedDate}</p>\r\n              <p>Due: {test.dueDate}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className='students-list'>\r\n        <h3>Students in this Class: </h3>\r\n        {students.map(student => (\r\n          <div key={student.id} className='class-viewer-student'>\r\n            <h4>Name: {student.name}</h4>\r\n            <p>GPA: {student.gpa}</p>\r\n            <p>Email: {student.email}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    teacherObj: state.teacherReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateTopProps)(ClassViewer);\r\n","import React from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setUser } from '../../actions';\r\nimport ClassViewer from '../teacher/ClassViewer';\r\n\r\nconst ClassesDashboard = props => {\r\n  const { classes, name } = props.teacherObj;\r\n  console.log('ClassesDashboard.js props', props);\r\n  return (\r\n    <div>\r\n      <h1 className='initial'>{name}'s classes:</h1>\r\n      <ul className='teacher-class-list'>\r\n        {classes.map(klass => (\r\n          <NavLink to={`/Teacher/class-viewer/${name}/${klass.subject}`}>\r\n            {klass.subject}\r\n          </NavLink>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    teacherObj: state.teacherReducer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateTopProps,\r\n  {}\r\n)(ClassesDashboard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport AccessDenied from '../AccessDenied.js';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\n\r\nexport default function TakeTest(props) {\r\n  const [loadedTest, setLoadedTest] = useState('');\r\n  //load test here.\r\n  useEffect(() => {\r\n    axiosWithAuth()\r\n      .get(`/testById/${props.match.params.testid}`)\r\n      .then(res => {\r\n        console.log('Loaded Test result: ', res.data);\r\n        setLoadedTest(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log('LoadedTest error: ', err);\r\n      });\r\n  }, []);\r\n\r\n  let [currentQuestion, setCurrentQuestion] = useState(0);\r\n  let [answerList, setAnswerList] = useState([]);\r\n  let [gradedAnswers, setAnswerCorrect] = useState([]);\r\n  let [isChecked, setIsChecked] = useState([false, false, false, false]);\r\n\r\n  //this function makes sure that the selected radio button is the only one that is checked,\r\n  //and that it is correct on every question. without this the check gets moved between questions even if no answer was selected.\r\n  const checkedCheck = () => {\r\n    setIsChecked([false, false, false, false]);\r\n    console.log('ans', answerList);\r\n    console.log(currentQuestion);\r\n    if (Array.isArray(loadedTest.questions[currentQuestion].options)) {\r\n      loadedTest.questions[currentQuestion].options.forEach((opt, index) => {\r\n        // console.log('the thing', opt, index, answerList[currentQuestion]);\r\n        if (\r\n          opt == answerList[currentQuestion] ||\r\n          opt === answerList[currentQuestion]\r\n        ) {\r\n          console.log(\r\n            'the thing',\r\n            'opt: ',\r\n            opt,\r\n            'ind: ',\r\n            index,\r\n            'ans: ',\r\n            answerList[currentQuestion]\r\n          );\r\n          if (index === 0) {\r\n            setIsChecked([true, false, false, false]);\r\n          } else if (index === 1) {\r\n            setIsChecked([false, true, false, false]);\r\n          } else if (index === 2) {\r\n            setIsChecked([false, false, true, false]);\r\n          } else if (index === 3) {\r\n            setIsChecked([false, false, false, true]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedTest) {\r\n      checkedCheck();\r\n    }\r\n  }, [loadedTest, currentQuestion]);\r\n\r\n  const handleChange = e => {\r\n    answerList[currentQuestion] = e.target.value;\r\n    checkedCheck();\r\n  };\r\n  const validateFunc = () => {\r\n    console.log(answerList);\r\n    console.log(answerList.includes(undefined));\r\n    if (\r\n      answerList.length === loadedTest.questions.length &&\r\n      answerList.includes(undefined) === false\r\n    ) {\r\n      console.log('all questions have been answered');\r\n      handleSubmit();\r\n    } else console.log('You must answer all questions.');\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    loadedTest.questions.forEach((quest, index) => {\r\n      // console.log(`Q: ${index}, Correct Answer: ${quest.answer}, Student Answer: ${answerList[index]}`);\r\n      if (quest.answer == answerList[index]) {\r\n        // console.log(`Question ${index} is correct`);\r\n        gradedAnswers[index] = true;\r\n      } else {\r\n        // console.log(`Question ${index} is incorrect`);\r\n        gradedAnswers[index] = false;\r\n      }\r\n    });\r\n    let score = 0;\r\n    gradedAnswers.forEach(bool => {\r\n      if (bool) {\r\n        score++;\r\n      }\r\n    });\r\n    let scorePercentage = ((score / gradedAnswers.length) * 100).toFixed();\r\n    const today = new Date();\r\n\r\n    console.log(gradedAnswers);\r\n    console.log(`Score: ${score}/${gradedAnswers.length}`);\r\n    console.log(\r\n      `${today.getMonth() + 1}-${today.getDate()}-${today.getFullYear()}`\r\n    );\r\n\r\n    // built completed test\r\n    let completedTest = {\r\n      testId: loadedTest.id,\r\n      title: loadedTest.title,\r\n      creator: loadedTest.creator,\r\n      answersList: answerList,\r\n      gradedAnswers: gradedAnswers,\r\n      scorePercentage: scorePercentage,\r\n      assignedDate: props.currentUser.assignedTests.find(test => {\r\n        return test.id == props.match.params.testid;\r\n      }).assignedDate,\r\n      completedDate: `${today.getMonth() +\r\n        1}-${today.getDate()}-${today.getFullYear()}`\r\n    };\r\n\r\n    //debugging logs\r\n    // console.log('Test.js currentUser', props.currentUser);\r\n    // console.log(completedTest);\r\n    // console.log(\r\n    //   'TakeTest.js props.currenUser.completedTest',\r\n    //   props.currentUser.completedTests\r\n    // );\r\n    // console.log(\r\n    //   'TakeTest.js props.currentUser.completedTests',\r\n    //   props.currentUser.completedTests\r\n    // );\r\n\r\n    props.currentUser.completedTests.push(completedTest);\r\n\r\n    //update server version of the student by sending\r\n    axiosWithAuth()\r\n      .put(`/updateCompletedTests/${props.currentUser.id}`, props.currentUser)\r\n      .then(res => {\r\n        console.log('TakeTest.js res.data', res.data);\r\n        props.history.push('/Student');\r\n      })\r\n      .catch(err => {\r\n        console.log('TestBank.js err', err);\r\n      });\r\n  };\r\n\r\n  const buttonIncFunc = () => {\r\n    console.log('Answer state check: ', answerList);\r\n    if (currentQuestion < loadedTest.questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      checkedCheck();\r\n    }\r\n  };\r\n  const buttonDecFunc = () => {\r\n    console.log('Answer state check: ', answerList);\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n      checkedCheck();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='initial'>Take Test</h1>\r\n      {(() => {\r\n        if (props.loggedIn) {\r\n          if (props.isTeacher) {\r\n            return <AccessDenied {...props} />;\r\n          } else {\r\n            if (loadedTest) {\r\n              return (\r\n                <div>\r\n                  <h2>\r\n                    You are taking: {loadedTest.title} #\r\n                    {props.match.params.testid}\r\n                  </h2>\r\n                  <h4>By {loadedTest.creator}</h4>\r\n                  <h5>\r\n                    Question: {currentQuestion + 1}/\r\n                    {loadedTest.questions.length}\r\n                  </h5>\r\n                  {(() => {\r\n                    if (\r\n                      loadedTest.questions[currentQuestion].type ===\r\n                      'multiple-choice'\r\n                    ) {\r\n                      return (\r\n                        <div>\r\n                          {/* <p>I'm a multiple choice!!</p> */}\r\n                          <p>\r\n                            {loadedTest.questions[currentQuestion].question}\r\n                          </p>\r\n                          <form name='form1'>\r\n                            {loadedTest.questions[currentQuestion].options.map(\r\n                              function(opt, index) {\r\n                                // console.log('CQ: ', currentQuestion, 'Ans', answerList[currentQuestion], 'OPT: ', opt, 'INDEX: ', index);\r\n                                return (\r\n                                  <p>\r\n                                    <input\r\n                                      type='radio'\r\n                                      name='first'\r\n                                      value={opt}\r\n                                      onChange={handleChange}\r\n                                      checked={isChecked[index]}\r\n                                    />{' '}\r\n                                    {opt}{' '}\r\n                                  </p>\r\n                                );\r\n                              }\r\n                            )}\r\n                          </form>\r\n                        </div>\r\n                      );\r\n                    } else if (\r\n                      loadedTest.questions[currentQuestion].type ===\r\n                      'true-false'\r\n                    ) {\r\n                      return (\r\n                        <div>\r\n                          {/* <p>I'm a true-false!!</p> */}\r\n                          <p>\r\n                            {loadedTest.questions[currentQuestion].question}\r\n                          </p>\r\n                          <form name='form2'>\r\n                            {loadedTest.questions[currentQuestion].options.map(\r\n                              (opt, index) => {\r\n                                return (\r\n                                  <p>\r\n                                    {' '}\r\n                                    <input\r\n                                      type='radio'\r\n                                      name='second'\r\n                                      value={opt}\r\n                                      onChange={handleChange}\r\n                                      checked={isChecked[index]}\r\n                                    />{' '}\r\n                                    {opt}\r\n                                  </p>\r\n                                );\r\n                              }\r\n                            )}\r\n                          </form>\r\n                        </div>\r\n                      );\r\n                    } else if (\r\n                      loadedTest.questions[currentQuestion].type ===\r\n                      'short-answer'\r\n                    ) {\r\n                      return (\r\n                        <div>\r\n                          {/* <p>I'm a short-answer!!</p> */}\r\n                          <p>\r\n                            {loadedTest.questions[currentQuestion].question}\r\n                          </p>\r\n                          <form>\r\n                            <input\r\n                              type='text'\r\n                              name='gender'\r\n                              onChange={handleChange}\r\n                              placeholder={\r\n                                answerList[currentQuestion] ||\r\n                                'Enter your answer here.'\r\n                              }\r\n                            />\r\n                          </form>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })()}\r\n\r\n                  <button onClick={buttonDecFunc}>Previous</button>\r\n                  <button onClick={buttonIncFunc}>Next</button>\r\n\r\n                  {(() => {\r\n                    if (currentQuestion + 1 === loadedTest.questions.length) {\r\n                      return <button onClick={validateFunc}>Submit</button>;\r\n                    }\r\n                  })()}\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n        } else {\r\n          return <AccessDenied {...props} />;\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n}\r\n\r\n//props.match.params.dataID\r\n","import React, { useEffect, useState } from 'react';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport { connect } from 'react-redux';\r\nimport { assginStudentToClass } from '../../actions';\r\n\r\nconst StudentRoster = props => {\r\n  const { teacherObj, classes } = props;\r\n  const { studentIds, teacherId } = teacherObj;\r\n  const [students, setStudents] = useState([]);\r\n  const [openDropDown, setOpenDropDown] = useState(false);\r\n  console.log('StudentRoster.js techerObj:', teacherObj);\r\n  console.log('StudentRoster.js students', students);\r\n  console.log('StudentIds: ', studentIds);\r\n  console.log('StudentRoster.js classes', classes);\r\n\r\n  /* [{id: 0, subject: \"Math\", students: Array(2), testsAssigned: Array(1)} ]*/\r\n\r\n  const addStudentToClass = (id, subject) => {\r\n    const selectedClass = classes.find(klass => klass.subject == subject);\r\n    const inClass = selectedClass.students.find(stu => stu.id == id);\r\n    if (!inClass) {\r\n      selectedClass.students.push(id);\r\n    }\r\n  };\r\n\r\n  const getStudents = () => {\r\n    studentIds.map(stId => {\r\n      axiosWithAuth()\r\n        .get(`/userById/${stId}`)\r\n        .then(res => {\r\n          setStudents([...students, res.data]);\r\n          console.log('.get res.datat', res.data);\r\n        })\r\n        .catch(err => console.log('error', err));\r\n    });\r\n  };\r\n\r\n  for (let i = 0; i < studentIds.lenght; i++) {}\r\n\r\n  return (\r\n    <div>\r\n      <div className='student-roster'>\r\n        <button onClick={getStudents}>Load Students</button>\r\n        <button onClick={() => setOpenDropDown(!openDropDown)}>\r\n          Assign Students to Classes\r\n        </button>\r\n        {students.map(student => (\r\n          <div className='student-roster-student'>\r\n            <h3>Name: {student.name}</h3>\r\n            <p>Student Id: {student.id}</p>\r\n            <a href='#'>\r\n              <p>Email: {student.email}</p>\r\n            </a>\r\n            <p>GPA: {student.gpa}</p>\r\n            {openDropDown && (\r\n              <div className='class-selector'>\r\n                {classes.map(klass => (\r\n                  <>\r\n                    <label htmlFor={klass.subject}>{klass.subject}</label>\r\n                    <input\r\n                      onClick={() =>\r\n                        addStudentToClass(student.id, klass.subject)\r\n                      }\r\n                      name={student.name}\r\n                      value={klass.subject}\r\n                      type='checkbox'\r\n                    />\r\n                  </>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {/* <select name='class-select' id=''>\r\n              <option defaultValue value='move-student'>\r\n                Put {student.name} in a class\r\n              </option>\r\n              {classes.map(klass => (\r\n                <option value={klass.subject}>{klass.subject}</option>\r\n              ))}\r\n            </select> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    teacherObj: state.teacherReducer,\r\n    classes: state.teacherReducer.classes\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateTopProps,\r\n  { assginStudentToClass }\r\n)(StudentRoster);\r\n","import React, { useEffect, useState } from 'react';\r\n// import ReactDOM from \"react-dom\";\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Header from './components/Header.js';\r\nimport './App.css';\r\nimport Landing from './components/landing/Landing.js';\r\nimport About from './components/landing/About.js';\r\nimport SignUp from './components/SignUp.js';\r\nimport TeacherLanding from './components/teacher/TeacherLanding.js';\r\nimport StudentDashboard from './components/student/StudentDashboard.js';\r\nimport Login from './components/Login';\r\nimport CreateTest from './components/test/CreateTest';\r\nimport TestBank from './components/teacher/TestBank';\r\nimport ClassesDashboard from './components/teacher/ClassesDashboard';\r\nimport ClassViewer from './components/teacher/ClassViewer';\r\nimport TestViewer from './components/teacher/TestViewer';\r\nimport TakeTest from './components/student/TakeTest.js';\r\nimport StudentRoster from './components/teacher/StudentRoster';\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const populateUser = obj => {\r\n    setCurrentUser(obj);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Header\r\n        loggedIn={loggedIn}\r\n        setLoggedIn={setLoggedIn}\r\n        currentUser={currentUser}\r\n        populateUser={populateUser}\r\n      />\r\n\r\n      <Route exact path='/' render={props => <Landing {...props} />} />\r\n      <Route exact path='/About' render={props => <About {...props} />} />\r\n      <Route\r\n        path='/SignUp'\r\n        render={props => (\r\n          <SignUp\r\n            {...props}\r\n            populateUser={populateUser}\r\n            setLoggedIn={setLoggedIn}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Login'\r\n        render={props => (\r\n          <Login\r\n            {...props}\r\n            populateUser={populateUser}\r\n            setLoggedIn={setLoggedIn}\r\n          />\r\n        )}\r\n      />\r\n\r\n      {loggedIn && (\r\n        <div>\r\n          {/* set this route to correct path if not already done */}\r\n          {/* ========= STUDENT ROUTES =============\r\n              ========= STUDENT ROUTES =============\r\n              ========= STUDENT ROUTES =============\r\n          */}\r\n          <Route\r\n            exact\r\n            path='/Student'\r\n            render={props => (\r\n              <StudentDashboard\r\n                {...props}\r\n                currentUser={currentUser}\r\n                loggedIn={loggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path={`/Student/TakeTest/:testid`}\r\n            render={props => (\r\n              <TakeTest\r\n                {...props}\r\n                loggedIn={loggedIn}\r\n                currentUser={currentUser}\r\n                setCurrentUser={setCurrentUser}\r\n              />\r\n            )}\r\n          />\r\n          {/* ========= TEACHER ROUTES =============\r\n              ========= TEACHER ROUTES =============\r\n              ========= TEACHER ROUTES =============\r\n          */}\r\n          <Route\r\n            path='/Teacher'\r\n            render={props => (\r\n              <TeacherLanding\r\n                {...props}\r\n                currentUser={currentUser}\r\n                loggedIn={loggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path='/Teacher/create-test'\r\n            render={props => (\r\n              <CreateTest\r\n                {...props}\r\n                loggedIn={loggedIn}\r\n                currentUser={currentUser}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path='/Teacher/test-bank'\r\n            render={props => (\r\n              <TestBank\r\n                {...props}\r\n                loggedIn={loggedIn}\r\n                currentUser={currentUser}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={'/Teacher/test-viewer/:id'}\r\n            component={TestViewer}\r\n          />\r\n          <Route\r\n            exact\r\n            path={'/Teacher/student-roster'}\r\n            component={StudentRoster}\r\n          />\r\n\r\n          <Route\r\n            path='/Teacher/classes-dashboard'\r\n            component={ClassesDashboard}\r\n          />\r\n          <Route\r\n            path={`/Teacher/class-viewer/:id/:id`}\r\n            render={props => <ClassViewer {...props} />}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* model teacher object: */\r\nimport {\r\n  setUser,\r\n  SET_USER,\r\n  ASSIGN_STUDENT_TO_CLASS,\r\n  assginStudentToClass,\r\n  SAVING_TEACHER,\r\n  SAVE_TEACHER_SUCCESS,\r\n  SAVE_TEACHER_FAIL,\r\n  saveTeacher\r\n} from '../actions';\r\n\r\nexport const initialState = {};\r\n\r\nexport const teacherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return (state = action.payload);\r\n\r\n    case ASSIGN_STUDENT_TO_CLASS:\r\n      const id = action.payload.id;\r\n      const subject = action.payload.subject;\r\n      const classPath = state.classes.find(item => (item.subject = subject));\r\n      return {\r\n        ...state.classPath,\r\n        students: [...state.classPath.students, id]\r\n      };\r\n\r\n    case SAVE_TEACHER_SUCCESS:\r\n      return (state = action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_TITLE,\r\n  setTitle,\r\n  save,\r\n  SET_CREATOR,\r\n  SET_TEST_TAKER,\r\n  ADD_QUESTION,\r\n  REMOVE_QUESTION,\r\n  SAVE_FAIL,\r\n  SAVE_SUCCESS,\r\n  SAVING,\r\n  NEW_TEST_CREATED,\r\n  CREATING_NEW_TEST,\r\n  CREATE_TEST_FAILED,\r\n  GETTING_TEST,\r\n  TEST_RECEIVED,\r\n  TEST_NOT_RECEIVED,\r\n  CLEAR_FIELDS,\r\n  DELETEING_TEST,\r\n  CONFIRM_DELETE_TEST\r\n} from '../actions';\r\n/* model test obj. */\r\nexport const initialState = {\r\n  score: 0,\r\n  isSaving: false,\r\n  isEditing: false,\r\n\r\n  creator: '',\r\n  title: '',\r\n  testTaker: '',\r\n  questions: []\r\n};\r\n\r\nexport const testReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_TEST_CREATED:\r\n      return (state = action.payload);\r\n      break;\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        title: action.payload\r\n      };\r\n      break;\r\n    case SET_CREATOR:\r\n      return {\r\n        ...state,\r\n        creator: action.payload\r\n      };\r\n      break;\r\n\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: [...state.questions, action.payload]\r\n      };\r\n      break;\r\n\r\n    case REMOVE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: [\r\n          ...state.questions.filter(item => item.question !== action.payload)\r\n        ]\r\n      };\r\n\r\n    case SAVING:\r\n      return {\r\n        ...state,\r\n        isEditing: true\r\n      };\r\n      break;\r\n\r\n    case CLEAR_FIELDS:\r\n      return (state = initialState);\r\n\r\n    case SAVE_SUCCESS:\r\n      console.log(\r\n        'testReducer.js SAVE_SUCESSS action.payload: ',\r\n        action.payload\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        state: action.payload,\r\n        isEditing: false\r\n      };\r\n      break;\r\n\r\n    case TEST_RECEIVED:\r\n      return (state = action.payload);\r\n      break;\r\n\r\n    case SET_TEST_TAKER:\r\n      alert('SETTING TEST TAKER');\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* model student object */\r\nconst initialState = {\r\n  id: 1,\r\n  firstName: 'Sally',\r\n  lastName: 'Smith',\r\n  teacher: 'Mrs. Mathews',\r\n  testsCompleted: [{ id: 1, title: 'Math Test', score: 98 }],\r\n  testsPending: [{ id: 2, title: 'History' }, { id: 3, title: 'Art' }]\r\n};\r\n\r\nexport const studentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_OPTION, REMOVE_OPTION, SET_TYPE, SET_ANSWER } from '../actions';\r\n\r\n/* model question obj. */\r\nexport const initialState = {\r\n  isEditing: false,\r\n  id: 1,\r\n  question: \"What's 6X6 ?\",\r\n  type: 'multiple-choice',\r\n  options: [36, 34, 26, 52],\r\n  answer: 36\r\n};\r\n\r\nexport const questionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TYPE:\r\n      alert('SETTING TYPE');\r\n      break;\r\n    case SET_ANSWER:\r\n      alert('SETTING ANSWER');\r\n      break;\r\n    case ADD_OPTION:\r\n      alert('ADDING OPTION');\r\n      break;\r\n    case REMOVE_OPTION:\r\n      alert('REMOVING OPTION');\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n// redux/ react-redux stuff\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n//reducers\r\nimport {\r\n  teacherReducer,\r\n  studentReducer,\r\n  testReducer,\r\n  questionReducer\r\n} from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    teacherReducer,\r\n    studentReducer,\r\n    testReducer,\r\n    questionReducer\r\n  }),\r\n  applyMiddleware(thunk, logger)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}